import numpy as np
import matplotlib.pyplot as plt


def test_Omega(rr):
    return -100*np.sin(2*np.pi*rr)


if __name__=='__main__':

    profile_r = [-0.1, 0.159, 0.2115625, 0.264125, 0.3166875, 0.36924999999999997, 0.42181250000000003, 0.474375, 0.5269375, 0.5795, 0.6320625, 0.684625, 0.7371875, 0.78975, 0.8423125, 0.894875, 0.9474375, 1.1]
    prof = [
(0,0,0),
(-312.5995170461799, 350.61681067555634, 344.7478914490605),
(-98.42532645340484, 142.076714240115, 139.56168521538936),
(-68.7264433910252, 108.77218106004986, 110.39424711644763),
(22.360862166934012, 145.03309054923614, 141.5925229896128),
(24.79231124592448, 118.55191538222445, 124.68610864749178),
(60.882194198570666, 165.20417627723631, 170.13287812542583),
(-30.987876540128177, 156.25572589235475, 158.57680588365866),
(-87.17368027828172, 167.1308868873187, 158.337189907717),
(-26.642440177755063, 195.57661339039424, 195.58599322154248),
(-86.72261870431618, 166.8616808853108, 168.74310196838982),
(-106.3201849350569, 156.95376587580608, 150.93708535905262),
(-143.2680996301081, 157.44786143847887, 157.15665733119909),
(-108.65058230656838, 253.38342134102334, 252.79361608951615),
(86.83128387983284, 123.00386754499824, 122.9387555246392),
(135.4012138290098, 288.4141047872709, 278.4387165738814),
(121.97770632474807, 422.51390955431896, 399.0328921887149)]
    



    
    kern_x = np.linspace(0,1,1000)
    bool_list = []
    for i in range(1, len(profile_r)):
        bool_list.append( (profile_r[i-1] <= kern_x) & (kern_x < profile_r[i]) )

    prof_mid = np.piecewise(kern_x, bool_list, [p[0] for p in prof])
    prof_top = np.piecewise(kern_x, bool_list, [p[0]+p[1] for p in prof])
    prof_bot = np.piecewise(kern_x, bool_list, [p[0]-p[2] for p in prof])

    plt.fill_between(kern_x, prof_bot, prof_top, label='MCMC uncert')
    plt.plot(kern_x, prof_mid, color='orange', label='MCMC')
    plt.plot(kern_x, test_Omega(kern_x), color='black', linewidth=2, label='True')
    plt.xlabel('Radius [R_star]')
    plt.ylabel('Rotation rate [nHz]')
    plt.legend()
    #plt.grid()
    plt.show()





